#
#   This is the core configuration for a configuration service.  I have two examples here:
#
#       -  A configuration service which completelty loads the configuration for the services
#          from the local file server of the config service.  This should only be used for
#          demonstration purposes or for a small application with a limited number of services.
#
#       -  A configuraton service that uses a git-based repository to read the files from
#
####################################
#server:
#  port: 8888
#spring:
#  cloud:
#    config:
#      server:
#        encrypt.enabled: false
#        git:
#          uri: https://github.com/yunWJR/config-repo
#          searchPaths: eurekaservice,EurekaClient
#          username: xxx
#          password: xxx
####
#Classpath and file-based solution
####
# 本地文件系统
server:
    port: 8888
spring:
    profiles:
        active: native
    cloud:
        config:
            server:
                native:
                    searchLocations: file:/Volumes/mac_data/2-pj/00-sc/yun-sc/yun-config-service/src/main/resources/config/eurekaservice,
                                     file:/Volumes/mac_data/2-pj/00-sc/yun-sc/yun-config-service/src/main/resources/config/EurekaClient

#                    searchLocations: file:/Volumes/mac_data/2-pj/00-sc/yun-sc/yun-config-service/src/main/resources/config/eurekaservice,
#                                     file:/Volumes/mac_data/2-pj/00-sc/yun-sc/yun-config-service/src/main/resources/config/EurekaClient

